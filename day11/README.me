1. 性质：每个父节点都小于其子节点（最小堆）
2. 数组实现：1是根节点 2x为x的左节点，2x+1为右节点
3. up操作：将其本身与其父节点比较，如果小于父节点，交换
4. down操作:将其本身与其子节点比较，与最小的交换
5. 堆的建立：`for(int i=n/2;i;i--)down(i);`此时时间复杂度为O（n）
6. 基本操作：
	1. 插入一个数：`heap[++size]=x;up(size);`
	3. 求集合当中的最小值`heap[1]`
	4. 删除最小值`heap[1]=heap[size];size--;down(1);`
	5. 删除任意一个元素`heap[k]=heap[size];size--;down(size);up(size)`
	6. 修改任意一个元素`heap[k]=x;down(k);up(k);`
2. 哈希表（离散化是特殊的哈希方式）
	1. 作用：将复杂的数据结构，映射到一段上（一般为x mod $10^5+3$即大于十万的质数)
	2. 存储结构:
		1. 开发寻址法：只开一个一维数组，且长度是题目数据范围的2~3倍，如果出现冲突，则继续往后插入，直到找到空位。查找同理，删除一般为在其位置打上标记。
		2. 拉链法：一个一维数组储存，如果遇见冲突就在相同位置上的链后面直接加上，如果要删除一般是在要删除的数上加上标记。
