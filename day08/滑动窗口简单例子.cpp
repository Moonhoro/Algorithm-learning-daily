#include <iostream>

using namespace std;

const int N = 100010;
// n为数组长度，k为滑动区间长度
int n, k;
int q[N], a[N]; // q数组用于存储滑动窗口中的下标，a数组存储输入的数值
int hh = 0, tt = -1; // hh和tt分别表示队头和队尾的下标

int main()
{
    // 输入数组长度和滑动区间长度
    cin >> n >> k;
    
    // 输入数组的值
    for(int i = 0; i < n; i++)
    {
        cin >> a[i];
    }

    // 求滑动窗口中的最大值
    for(int i = 0; i < n; i++)
    {
        // 判断队头是否已经不在当前滑动窗口范围内，如果是，则队头元素出队
        if(hh <= tt && i - k + 1 > q[hh])
            hh++;
        
        // 保持队列中的元素单调递减，如果当前元素大于等于队尾元素，则将队尾元素出队
        while(hh <= tt && a[q[tt]] >= a[i])
            tt--;
        
        // 将当前元素的下标入队
        q[++tt] = i;
        
        // 判断是否已经形成一个完整的滑动窗口，如果是，则输出滑动窗口中的最大值
        if(i >= k - 1)
            cout << a[q[hh]] << " ";
    }
    cout << endl; // 换行输出

    // 清空队列，重新计算滑动窗口中的最小值
    hh = 0, tt = -1;
    
    // 求滑动窗口中的最小值
    for(int i = 0; i < n; i++)
    {
        // 判断队头是否已经不在当前滑动窗口范围内，如果是，则队头元素出队
        if(hh <= tt && i - k + 1 > q[hh])
            hh++;
        
        // 保持队列中的元素单调递增，如果当前元素小于等于队尾元素，则将队尾元素出队
        while(hh <= tt && a[q[tt]] <= a[i])
            tt--;
        
        // 将当前元素的下标入队
        q[++tt] = i;
        
        // 判断是否已经形成一个完整的滑动窗口，如果是，则输出滑动窗口中的最小值
        if(i >= k - 1)
            cout << a[q[hh]] << " ";
    }
    
    return 0;
}
